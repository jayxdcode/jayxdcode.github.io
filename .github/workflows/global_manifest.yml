name: Generate Global Manifest

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create generate.js
        run: |
          cat << 'EOF' > generate.js
          const fs = require('fs');
          const path = require('path');

          const username = process.env.GITHUB_USERNAME;

          function getDirInfo(dirPath, relativePath = '') {
          	const stats = fs.statSync(dirPath);
          	if (!stats.isDirectory()) return null;

          	const result = {
          		type: 'folder',
          		folders: 0,
          		files: 0,
          		hasIndexHTML: false,
          		size: 0,
          		path: relativePath || '.', // Set path here
          		contents: {}
          	};

          	const entries = fs.readdirSync(dirPath);
          	for (const entry of entries) {
          		if (entry === '.git') continue;
          		const fullPath = path.join(dirPath, entry);
          		const entryStats = fs.statSync(fullPath);
          		const entryRelativePath = relativePath ? `${relativePath}/${entry}` : entry; // Build relative path

          		if (entryStats.isDirectory()) {
          			result.folders++;
          			const subdirInfo = getDirInfo(fullPath, entryRelativePath);
          			result.contents[entry] = subdirInfo;
          			result.size += subdirInfo.size;
          		} else {
          			result.files++;
          			result.hasIndexHTML ||= entry.toLowerCase() === 'index.html';
          			result.size += entryStats.size;
          			result.contents[entry] = {
          				type: 'file, ' + path.extname(entry).slice(1).toUpperCase(),
          				size: entryStats.size,
          				path: entryRelativePath // Add file path too
          			};
          		}
          	}

          	// Sort contents after building
          	result.contents = sortContents(result.contents);
          	return result;
          }

          function sortContents(contents) {
          	return Object.fromEntries(
          		Object.entries(contents)
          			.sort((a, b) => {
          				const [aName, aVal] = a;
          				const [bName, bVal] = b;
          				if (aVal.type === 'folder' && bVal.type !== 'folder') return -1;
          				if (aVal.type !== 'folder' && bVal.type === 'folder') return 1;
          				return aName.localeCompare(bName);
          			})
          	);
          }

          const manifest = {
          	`${username}.github.io`: getDirInfo(".")
          };

          fs.mkdirSync('global', { recursive: true });
          fs.writeFileSync('global/global_manifest.json', JSON.stringify(manifest, null, 2));
          EOF

      - name: Run generator script
        env:
          GITHUB_USERNAME: ${{ github.repository_owner }}
        run: node generate.js

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add global/global_manifest.json
          git commit -m "Updated ${{ github.repository }}'s directory manifest."
          git push